# 必须有 events 块
events {
    worker_connections 1024;   # 支持的最大连接数，可根据需要调整
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # -----------------------------
    # Gzip 压缩优化
    # -----------------------------
    gzip  on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    # -----------------------------
    # 日志配置
    # -----------------------------
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    error_log   logs/error.log  warn;

    # =============================
    # 新增 AI 服务负载均衡
    # =============================
    upstream ai_backend {
        server 127.0.0.1:8081;
        server 127.0.0.1:8082;
        server 127.0.0.1:8083;
        server 127.0.0.1:8084;
        server 127.0.0.1:8085;
    }

    # -----------------------------
    # HTTP 配置（自动跳转到 HTTPS）
    # -----------------------------
    server {
        listen 80;
        server_name pyp.ylkj668.com;

        return 301 https://$host$request_uri;
    }

    # -----------------------------
    # HTTPS 配置
    # -----------------------------
    server {
        listen 443 ssl;
        server_name pyp.ylkj668.com;

        ssl_certificate      C:\pyp\ssl\pyp.ylkj668.com_cert.pem;
        ssl_certificate_key  C:\pyp\ssl\202508291410174294_key.key;

        ssl_protocols        TLSv1.2 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
		
		
		# 🔑 上传大小限制（这里设置为 200MB）
		client_max_body_size 200m;

        # -----------------------------
        # 前端静态页面
        # -----------------------------
        location / {
            root   C:/pyp/dist;
            index  index.html index.htm;
            try_files $uri /index.html;
        }
		
		
		# 目标流式地址：/jeecg-boot/pengyipeng/api/ai/stream
		location /jeecg-boot/pengyipeng/api/ai/stream {
			# 1. 上游服务地址（Jeecg-Boot 后端的真实地址，如 Tomcat/Jetty 地址）
			# 格式：http://[上游IP]:[上游端口]，若后端是集群可配置 proxy_pass http://backend_cluster;
			proxy_pass http://127.0.0.1:8080/jeecg-boot/pengyipeng/api/ai/stream;  # 示例：本地 Jeecg-Boot 端口 8080

			# 2. 流式关键参数（覆盖全局或补充）
			proxy_buffering off;              # 强制禁用缓冲（核心）
			proxy_max_temp_file_size 0;       # 禁用临时文件
			proxy_read_timeout 600s;          # 长连接超时（AI 流可能持续几分钟）
			proxy_http_version 1.1;           # 启用 HTTP/1.1（支持 Chunked 编码和长连接）
			proxy_set_header Connection "";   # 清除 Connection 头，避免上游关闭长连接

			# 3. 适配 SSE（Server-Sent Events）场景（若你的流是 SSE，必须加此配置）
			proxy_set_header Accept-Encoding "";  # 禁用编码压缩
			add_header Cache-Control "no-cache";  # 告知客户端不缓存 SSE 流
			add_header X-Accel-Buffering "no";    # 禁用 Nginx 加速缓冲（SSE 关键）

			# 4. 适配 WebSocket 场景（若你的流是 WebSocket，需补充以下 3 行）
			# proxy_set_header Upgrade $http_upgrade;
			# proxy_set_header Connection "upgrade";
			# proxy_read_timeout 3600s;  # WebSocket 超时可设更长（如 1 小时）
		}
		
		
		# -----------------------------
		# 用户端 H5 页面
		# -----------------------------
		location /h5/ {
			root   C:/pyp;
			index  index.html index.htm;
			try_files $uri /h5/index.html;
		}

        # -----------------------------
        # AI 服务反向代理（负载均衡）
        # -----------------------------
        location /jeecg-boot/pengyipeng/user-app/api/ai/generate {
            proxy_pass http://ai_backend/pengyipeng/user-app/api/ai/generate;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_read_timeout 300s;
        }

        # -----------------------------
        # MINIO 文件服务反向代理
        # -----------------------------
        location /minio/ {
            proxy_pass http://127.0.0.1:9000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
        }

        # -----------------------------
        # Jeecg-Boot 后台接口反向代理
        # -----------------------------
        location /jeecg-boot/ {
            proxy_pass         http://127.0.0.1:8080/jeecg-boot/;
            proxy_redirect off;
            proxy_set_header  Host             $host;
            proxy_set_header  X-Real-IP        $remote_addr;
            set $my_proxy_add_x_forwarded_for $proxy_add_x_forwarded_for;
            if ($proxy_add_x_forwarded_for ~* "127.0.0.1"){
                set $my_proxy_add_x_forwarded_for $remote_addr;
            }
            proxy_set_header   X-Forwarded-For $my_proxy_add_x_forwarded_for;
        }

        location /jeecgboot/ {
            proxy_pass         http://127.0.0.1:8080/jeecg-boot/;
            proxy_redirect off;
            proxy_set_header  Host             $host;
            proxy_set_header  X-Real-IP        $remote_addr;
            set $my_proxy_add_x_forwarded_for $proxy_add_x_forwarded_for;
            if ($proxy_add_x_forwarded_for ~* "127.0.0.1"){
                set $my_proxy_add_x_forwarded_for $remote_addr;
            }
            proxy_set_header   X-Forwarded-For $my_proxy_add_x_forwarded_for;
        }

        # -----------------------------
        # 错误页面配置
        # -----------------------------
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root html;
        }
    }

}
